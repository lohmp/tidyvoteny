library(tidyvoteny)
devtools::install_github("jorgep17/tidyvoteny")
library(tidyvoteny)
# here we determine our district number is '15' and we want to see election results broken down for the 2018 Governor Primary by Congressional District.
target = "15"
formula =  cong_district~Unit.Name
#install.packages("data.table")
library(data.table)
# 2018 Governor ####
Gov18 <- nycdb %>%
dcast.data.table(subset = .(Event == "PE_2018"
& Office == "Governor"),
formula = formula,
fun.aggregate = sum,
value.var = "votes")
library(tidyvoteny)
head(nycdb)
# 2018 Governor ####
Gov18 <- nycdb %>%
dcast.data.table(subset = .(Event == "PE_2018"
& Office == "Governor"),
formula = formula,
fun.aggregate = sum,
value.var = "votes")
# 2018 Governor ####
Gov18 <- nycdb %>%
dcast.data.table(subset = .(Event == "PE_2018"
& Office == "Governor"),
formula = formula,
fun.aggregate = sum,
value.var = "votes")
#install.packages("data.table")
library(data.table)
library(dplyr)
# 2018 Governor ####
Gov18 <- nycdb %>%
dcast.data.table(subset = .(Event == "PE_2018"
& Office == "Governor"),
formula = formula,
fun.aggregate = sum,
value.var = "votes")
# 2018 Governor ####
Gov18 <- as.data.table(nycdb) %>%
dcast.data.table(subset = .(Event == "PE_2018"
& Office == "Governor"),
formula = formula,
fun.aggregate = sum,
value.var = "votes")
data.table(nycdb)
nycdb <- data.table(nycdb)
nycdb <- as.numeric(nycdb$votes)
# 2018 Governor ####
Gov18 <-nycdb %>%
dcast.data.table(subset = .(Event == "PE_2018"
& Office == "Governor"),
formula = formula,
fun.aggregate = sum,
value.var = "votes")
#install.packages("data.table")
library(data.table)
library(dplyr)
nycdb <- as.numeric(nycdb$votes)
nycdb <- data.table(nycdb)
nycdb <- as.numeric(nycdb$votes)
nycdb <- data.table(nycdb)
# 2018 Governor ####
Gov18 <-nycdb %>%
dcast.data.table(subset = .(Event == "PE_2018"
& Office == "Governor"),
formula = formula,
fun.aggregate = sum,
value.var = "votes")
#install.packages("data.table")
library(data.table)
library(dplyr)
nycdb <- as.numeric(nycdb$votes)
library(tidyvoteny)
nycdb <- data.table(nycdb)
library(tidyvoteny)
nycdb <- data.table::fread("nycdb.csv",header = T,stringsAsFactors = F)
load("~/GitHub/tidyvoteny/data/nycdb.rda")
View(nycdb)
nycdb <- as.data.table(x = nycdb)
nycdb$votes <- as.numeric(nycdb$votes)
usethis::use_data(nycdb, compress = "xz",overwrite = TRUE)
# 2018 Governor ####
Gov18 <-nycdb %>%
dcast.data.table(subset = .(Event == "PE_2018"
& Office == "Governor"),
formula = formula,
fun.aggregate = sum,
value.var = "votes")
# here we determine our district number is '15' and we want to see election results broken down for the 2018 Governor Primary by Congressional District.
target = "15"
formula =  cong_district~Unit.Name
# 2018 Governor ####
Gov18 <-nycdb %>%
dcast.data.table(subset = .(Event == "PE_2018"
& Office == "Governor"),
formula = formula,
fun.aggregate = sum,
value.var = "votes")
Gov18 <- Gov18[,c( "cong_district","Andrew M. Cuomo", "Cynthia E. Nixon")]
View(Gov18)
# 2018 Governor ####
Gov18 <-nycdb %>%
dcast.data.table(subset = .(Event == "PE_2018"
& Office == "Governor"),
formula = formula,
fun.aggregate = sum,
value.var = "votes")
View(Gov18)
library(tidyvoteny)
# here we determine our district number is '15' and we want to see election results broken down for the 2018 Governor Primary by Congressional District.
target = "15"
formula =  cong_district~Unit.Name
#install.packages("data.table")
library(data.table)
library(dplyr)
nycdb <- as.numeric(nycdb$votes)
nycdb <- data.table(nycdb)
# 2018 Governor ####
Gov18 <-nycdb %>%
dcast.data.table(subset = .(Event == "PE_2018"
& Office == "Governor"),
formula = formula,
fun.aggregate = sum,
value.var = "votes")
library(tidyvoteny)
# here we determine our district number is '15' and we want to see election results broken down for the 2018 Governor Primary by Congressional District.
target = "15"
formula =  cong_district~Unit.Name
#install.packages("data.table")
library(data.table)
library(dplyr)
# 2018 Governor ####
Gov18 <-nycdb %>%
dcast.data.table(subset = .(Event == "PE_2018"
& Office == "Governor"),
formula = formula,
fun.aggregate = sum,
value.var = "votes")
library(tidyvoteny)
load("~/GitHub/tidyvoteny/data/nycdb.rda")
# 2018 Governor ####
Gov18 <-nycdb %>%
dcast.data.table(subset = .(Event == "PE_2018"
& Office == "Governor"),
formula = formula,
fun.aggregate = sum,
value.var = "votes")
devtools::install_github("jorgep17/tidyvoteny")
library(tidyvoteny)
head(nycdb)
library(tidyvoteny)
# here we determine our district number is '15' and we want to see election results broken down for the 2018 Governor Primary by Congressional District.
target = "15"
formula =  cong_district~Unit.Name
#install.packages("data.table")
library(data.table)
library(dplyr)
# 2018 Governor ####
Gov18 <-nycdb %>%
dcast.data.table(subset = .(Event == "PE_2018"
& Office == "Governor"),
formula = formula,
fun.aggregate = sum,
value.var = "votes")
usethis::use_data(nycdb, compress = "xz",overwrite = TRUE)
library(sf)
install.packages("sf")
library(sf)
library(rgdal)
install.packages("rgdal")
install.packages(c("leaflet", "data.table", "wesanderson", "janitor", "tidyvoteny", "RColorBrewer", "rgeos", "tigris", "dplyr", "stringr", "htmltools"))
install.packages(c("leaflet", "data.table", "wesanderson", "janitor", "tidyvoteny", "RColorBrewer", "rgeos", "tigris", "dplyr", "stringr", "htmltools"))
library(sf)
library(rgdal)
library(mapview)
library(htmltools)
library(stringr) # to pad fips codes
library(dplyr)
library(leaflet)
library(tigris)
library(rgeos)
library(data.table)
library(RColorBrewer)
library(wesanderson)
library(tidyvoteny)
library(janitor)
library(readr)
nycdb <- data.table::fread("nycdb.csv",header = T,stringsAsFactors = F)
# Compress data table
nycdb <- data.table::fread("nycdb.csv",header = T,stringsAsFactors = F)
nycdb <- stringi::stri_trans_general(nycdb, "latin-ascii")
nycdb <- as.data.table(x = nycdb)
nycdb <- data.table::as.data.table(x = nycdb)
usethis::use_data(nycdb, compress = "xz",overwrite = TRUE)
load("~/r_space/tidyvoteny/data/nycdb.rda")
# Compress data table
nycdb <- data.table::fread("nycdb.csv",header = T,stringsAsFactors = F)
#nycdb <- stringi::stri_trans_general(nycdb, "latin-ascii")
nycdb <- data.table::as.data.table(x = nycdb)
usethis::use_data(nycdb, compress = "xz",overwrite = TRUE)
load("~/r_space/tidyvoteny/data/nycdb.rda")
load("~/r_space/tidyvoteny/.RData")
load("~/r_space/tidyvoteny/data/nycdb.rda")
# Compress data table
nycdb <- data.table::fread("nycdb.csv",header = T,stringsAsFactors = F)
#nycdb <- stringi::stri_trans_general(nycdb, "latin-ascii")
nycdb <- data.table::as.data.table(x = nycdb)
usethis::use_data(nycdb, compress = "xz",overwrite = TRUE)
nycdb <- readRDS("~/r_space/tidyvoteny/nycdb.Rds")
#nycdb <- stringi::stri_trans_general(nycdb, "latin-ascii")
nycdb <- data.table::as.data.table(x = nycdb)
usethis::use_data(nycdb, compress = "xz",overwrite = TRUE)
# Compress data table
nycdb <- readRDS("~/r_space/tidyvoteny/nycdb.Rds")
#nycdb <- stringi::stri_trans_general(nycdb, "latin-ascii")
nycdb <- data.table::as.data.table(x = nycdb)
usethis::use_data(nycdb, compress = "xz",overwrite = TRUE)
# Compress data table
nycdb <- readRDS("~/r_space/tidyvoteny/nycdb.Rds")
#nycdb <- stringi::stri_trans_general(nycdb, "latin-ascii")
nycdb <- data.table::as.data.table(x = nycdb)
usethis::use_data(nycdb, compress = "xz",overwrite = TRUE)
usethis::use_data("DATASET")
Compress data table
nycdb <- readRDS("~/r_space/tidyvoteny/nycdb.Rds")
#nycdb <- stringi::stri_trans_general(nycdb, "latin-ascii")
nycdb <- data.table::as.data.table(x = nycdb)
usethis::use_data(nycdb, compress = "xz",overwrite = TRUE)
usethis::use_data("DATASET")
# Compress data table
nycdb <- readRDS("~/r_space/tidyvoteny/nycdb.Rds")
#nycdb <- stringi::stri_trans_general(nycdb, "latin-ascii")
nycdb <- data.table::as.data.table(x = nycdb)
usethis::use_data(nycdb, compress = "xz",overwrite = TRUE)
rm(nycdb)
# Compress data table
nycdb <- readRDS("~/r_space/tidyvoteny/nycdb.Rds")
#nycdb <- stringi::stri_trans_general(nycdb, "latin-ascii")
nycdb <- data.table::as.data.table(x = nycdb)
usethis::use_data(nycdb, compress = "xz",overwrite = TRUE)
file.remove("nycdb.Rds")
# Compress data table
nycdb <- readRDS("~/r_space/tidyvoteny/nycdb.Rds")
#nycdb <- stringi::stri_trans_general(nycdb, "latin-ascii")
nycdb <- data.table::as.data.table(x = nycdb)
usethis::use_data(nycdb, compress = "xz",overwrite = TRUE)
rm(nycdb)
file.remove("nycdb.Rds")
usethis::use_data("DATASET")
# Compress data table
nycdb <- readRDS("~/r_space/tidyvoteny/nycdb.Rds")
#nycdb <- stringi::stri_trans_general(nycdb, "latin-ascii")
nycdb <- data.table::as.data.table(x = nycdb)
usethis::use_data(nycdb, compress = "xz",overwrite = TRUE)
rm(nycdb)
file.remove("nycdb.Rds")
# Compress data table
nycdb <- readRDS("~/r_space/tidyvoteny/nycdb.Rds")
#nycdb <- stringi::stri_trans_general(nycdb, "latin-ascii")
nycdb <- data.table::as.data.table(x = nycdb)
usethis::use_data(nycdb, compress = "xz",overwrite = TRUE)
rm(nycdb)
file.remove("nycdb.Rds")
# Compress data table
nycdb <- readRDS("~/r_space/tidyvoteny/nycdb.Rds")
#nycdb <- stringi::stri_trans_general(nycdb, "latin-ascii")
nycdb <- data.table::as.data.table(x = nycdb)
usethis::use_data(nycdb, compress = "xz",overwrite = TRUE)
rm(nycdb)
file.remove("nycdb.Rds")
# Compress data table
nycdb <- readRDS("~/r_space/tidyvoteny/nycdb.Rds")
#nycdb <- stringi::stri_trans_general(nycdb, "latin-ascii")
nycdb <- data.table::as.data.table(x = nycdb)
usethis::use_data(nycdb, compress = "xz",overwrite = TRUE)
rm(nycdb)
file.remove("nycdb.Rds")
load("~/r_space/tidyvoteny/data/nycdb.rda")
nycdb %>% filter(Office == "Mayor" & Event == "PE_2021")
library(dplyr)
nycdb %>% filter(Office == "Mayor" & Event == "PE_2021")
nycdb <- readRDS("~/r_space/tidyvoteny/nycdb.Rds")
#nycdb <- stringi::stri_trans_general(nycdb, "latin-ascii")
nycdb <- data.table::as.data.table(x = nycdb)
usethis::use_data(nycdb, compress = "xz",overwrite = TRUE)
rm(nycdb)
file.remove("nycdb.Rds")
load("~/r_space/tidyvoteny/data/nycdb.rda")
# Compress data table
nycdb <- readRDS("~/r_space/tidyvoteny/nycdb.Rds")
#nycdb <- stringi::stri_trans_general(nycdb, "latin-ascii")
nycdb <- data.table::as.data.table(x = nycdb)
usethis::use_data(nycdb, compress = "xz",overwrite = TRUE)
rm(nycdb)
file.remove("nycdb.Rds")
# Compress data table
nycdb <- readRDS("~/r_space/tidyvoteny/nycdb.Rds")
#nycdb <- stringi::stri_trans_general(nycdb, "latin-ascii")
nycdb <- data.table::as.data.table(x = nycdb)
usethis::use_data(nycdb, compress = "xz",overwrite = TRUE)
rm(nycdb)
file.remove("nycdb.Rds")
